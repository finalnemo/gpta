/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.zhu.action;

import java.io.IOException;
import java.io.PrintWriter;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.zhu.entity.Hotspot;
import com.zhu.entity.Message;
import com.zhu.entity.Orderinfo;
import com.zhu.form.HotSpotForm;
import com.zhu.form.OrderForm;
import com.zhu.service.HotSpotService;
import com.zhu.service.MessageService;
import com.zhu.service.OrderService;
import com.zhu.util.MD5;
import com.zhu.util.UUID;

/**
 * MyEclipse Struts Creation date: 04-18-2015
 * 
 * XDoclet definition:
 * 
 * @struts.action parameter="m" scope="request" validate="true"
 */
public class HotSpotAction extends DispatchAction {
	/*
	 * Generated Methods
	 */

	/**
	 * Method execute
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward spotlist(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		HttpSession session = request.getSession();
		if (session.getAttribute("admin") == null) {
			return mapping.findForward("wrong");
		} else {
			HotSpotService hotspotService = new HotSpotService();
			List<Hotspot> hotspotlist = hotspotService.getHotSpot();
			request.setAttribute("hotspot", hotspotlist);
			OrderService orderService = new OrderService();
			int back = orderService.getOrderCount();
			request.setAttribute("count", back);
			// if (session.getAttribute("message") != null) {
			// request.removeAttribute("message");
			// }
			return mapping.findForward("list");
		}
	}

	public ActionForward addspot(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		HttpSession session = request.getSession();
		if (session.getAttribute("admin") == null) {
			return mapping.findForward("wrong");
		} else {
			OrderService orderService = new OrderService();
			int back = orderService.getOrderCount();
			request.setAttribute("count", back);
			return mapping.findForward("add");
		}

	}

	public void addspotinfo(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws IOException {
		HotSpotForm hotspotForm = (HotSpotForm) form;
		MD5 md5 = new MD5();
		UUID uuid = new UUID();
		HotSpotService hotspotService = new HotSpotService();
		Hotspot hotspot = new Hotspot();
		hotspot.setId(uuid.getUUID());
		hotspot.setTitle(hotspotForm.getTitle());
		hotspot.setSpotname(hotspotForm.getSpotname());
		hotspot.setPrice(hotspotForm.getPrice());
		hotspot.setDiscount(hotspotForm.getDiscount());
		hotspot.setRemark(hotspotForm.getRemark());
		hotspot.setDate(hotspotForm.getDate());
		hotspot.setDay(hotspotForm.getDay());
		hotspot.setD1(hotspotForm.getD1());
		hotspot.setD2(hotspotForm.getD2());
		hotspot.setD3(hotspotForm.getD3());
		hotspot.setD4(hotspotForm.getD4());
		hotspot.setD5(hotspotForm.getD5());
		hotspot.setD6(hotspotForm.getD6());
		hotspot.setD7(hotspotForm.getD7());
		hotspot.setD8(hotspotForm.getD8());
		hotspot.setD9(hotspotForm.getD9());
		hotspot.setD10(hotspotForm.getD10());
		int back = hotspotService.addHotSpot(hotspot);
		PrintWriter out = response.getWriter();
		if (back == 1) {
			out.print(back);
			out.flush();
			out.close();
		} else {
			back = 0;
			out.print(back);
			out.flush();
			out.close();
		}
	}

	// 客户端页面
	public ActionForward hotspotdetail(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		HotSpotForm hotspotForm = (HotSpotForm) form;
		HotSpotService hotspotService = new HotSpotService();
		MessageService messageService = new MessageService();
		Hotspot hotspot = new Hotspot();
		hotspot = hotspotService.getHotspotById(hotspotForm.getId());
		List<Message> list = messageService.getLastMessage(hotspotForm.getId());
		List<Message> alllist = messageService.getMessageBySpotId(hotspotForm
				.getId());
		request.setAttribute("list", list);
		request.setAttribute("alllist", alllist);
		request.setAttribute("hotspot", hotspot);
		return mapping.findForward("detail");
	}

	public ActionForward hotspotorder(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		OrderForm orderForm = (OrderForm) form;
		Orderinfo order = new Orderinfo();
		UUID uuid = new UUID();
		order.setId(uuid.getUUID());
		order.setNum(orderForm.getNum());
		order.setPrice(orderForm.getPrice());
		/*
		 * 订单状态: 0-未支付 1-已支付,处理中 2-处理完 3-已完成
		 */
		order.setStatus(0);

		return null;

	}

	public ActionForward updatehotspot(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		HttpSession session = request.getSession();
		if (session.getAttribute("admin") == null) {
			return mapping.findForward("wrong");
		} else {
			HotSpotForm hotspotForm = (HotSpotForm) form;
			HotSpotService hotspotService = new HotSpotService();
			Hotspot hotspot = new Hotspot();
			hotspot = hotspotService.getHotspotById(hotspotForm.getId());
			request.setAttribute("hotspot", hotspot);
			return mapping.findForward("add");
		}

	}

	public void updatehotspotinfo(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws IOException {

		HotSpotForm hotspotForm = (HotSpotForm) form;
		HotSpotService hotspotService = new HotSpotService();
		Hotspot hotspot = new Hotspot();
		hotspot.setId(hotspotForm.getId());
		hotspot.setTitle(hotspotForm.getTitle());
		hotspot.setSpotname(hotspotForm.getSpotname());
		hotspot.setPrice(hotspotForm.getPrice());
		hotspot.setDiscount(hotspotForm.getDiscount());
		hotspot.setRemark(hotspotForm.getRemark());
		hotspot.setDate(hotspotForm.getDate());
		hotspot.setDay(hotspotForm.getDay());
		hotspot.setD1(hotspotForm.getD1());
		hotspot.setD2(hotspotForm.getD2());
		hotspot.setD3(hotspotForm.getD3());
		hotspot.setD4(hotspotForm.getD4());
		hotspot.setD5(hotspotForm.getD5());
		hotspot.setD6(hotspotForm.getD6());
		hotspot.setD7(hotspotForm.getD7());
		hotspot.setD8(hotspotForm.getD8());
		hotspot.setD9(hotspotForm.getD9());
		hotspot.setD10(hotspotForm.getD10());
		hotspotService.updHotspot(hotspot);
		int back = 0;
		PrintWriter out = response.getWriter();
		out.print(back);
		out.flush();
		out.close();

	}

	public ActionForward delhotspotbyid(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		HttpSession session = request.getSession();
		if (session.getAttribute("admin") == null) {
			return mapping.findForward("wrong");
		} else {
			HotSpotForm hotspotForm = (HotSpotForm) form;
			HotSpotService hotspotService = new HotSpotService();
			boolean back = hotspotService.delHotspotById(hotspotForm.getId());
			if (back = true) {
				request.setAttribute("message", "删除成功");
			} else {
				request.setAttribute("message", "删除失败");
			}
			List<Hotspot> hotspotlist = hotspotService.getHotSpot();
			request.setAttribute("hotspot", hotspotlist);
			return mapping.findForward("list");
		}

	}
}