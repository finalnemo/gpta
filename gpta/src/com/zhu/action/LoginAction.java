/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.zhu.action;

import java.io.IOException;
import java.io.PrintWriter;
import java.sql.Timestamp;
import java.util.Date;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.zhu.entity.Hotspot;
import com.zhu.entity.User;
import com.zhu.form.LoginForm;
import com.zhu.service.HotSpotService;
import com.zhu.service.UserService;
import com.zhu.util.MD5;

/**
 * MyEclipse Struts Creation date: 04-07-2015
 * 
 * XDoclet definition:
 * 
 * @struts.action parameter="m" scope="request" validate="true"
 */
public class LoginAction extends DispatchAction {
	/*
	 * Generated Methods
	 */

	/**
	 * Method execute
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws IOException
	 */
	public ActionForward init(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws IOException {

		HttpSession session = request.getSession();
		if (session.getAttribute("user") == null) {
			return mapping.findForward("wrong");
		} else {
			User user = new User();
			user = (User) session.getAttribute("user");
			UserService userService = new UserService();
			List<User> userinfo = userService.getUserInfoById(user.getId());
			request.setAttribute("userinfo", userinfo);
			return mapping.findForward("list");
		}
	}

	public ActionForward exit(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// LoginForm loginForm = (LoginForm) form;
		HttpSession session = request.getSession();
		session.removeAttribute("user");
		HotSpotService hotspotService = new HotSpotService();
		List<Hotspot> hotspotlist = hotspotService.getHotSpot();
		request.setAttribute("hotspot", hotspotlist);
		return mapping.findForward("index");
	}

	public void validate(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws IOException {
		LoginForm loginForm = (LoginForm) form;
		MD5 md5 = new MD5();
		String userid = loginForm.getUserid();
		String password = md5.GetMD5Code(loginForm.getPassword());
		User user = new User();
		UserService userService = new UserService();
		HttpSession session = request.getSession();
		// 判断用户存在
		long count = userService.getUserId(userid);
		PrintWriter out = response.getWriter();
		int back = 0;
		if (count != 0) {
			// 判断密码是否正确
			user = userService.userLogin(userid, password);
			if (user == null) {
				// 密码错误
				back = 2;
				out.print(back);
				out.flush();
				out.close();
			} else {
				// 密码正确
				Date date = new Date();
				Timestamp ts = new Timestamp(date.getTime());
				user.setLastlogindate(ts);
				userService.updUserInfo(user);
				session.setAttribute("user", user);
				out.print(back);
				out.flush();
				out.close();
			}
		} else {
			// 用户不存在
			back = 1;
			out.print(back);
			out.flush();
			out.close();
		}
	}
}