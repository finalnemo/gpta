/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.zhu.action;

import java.io.IOException;
import java.io.PrintWriter;
import java.net.InetAddress;
import java.net.UnknownHostException;
import java.sql.Timestamp;
import java.util.Date;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.zhu.entity.Message;
import com.zhu.entity.User;
import com.zhu.form.MessageForm;
import com.zhu.service.MessageService;
import com.zhu.service.OrderService;
import com.zhu.util.UUID;

/**
 * MyEclipse Struts Creation date: 06-06-2015
 * 
 * XDoclet definition:
 * 
 * @struts.action parameter="m" scope="request" validate="true"
 */
public class MessageAction extends DispatchAction {
	/*
	 * Generated Methods
	 */

	/**
	 * Method execute
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward init(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {

		HttpSession session = request.getSession();
		if (session.getAttribute("admin") == null) {
			return mapping.findForward("wrong");
		} else {
			MessageService messageService = new MessageService();
			List<Message> msglist = messageService.getMessage();
			request.setAttribute("msglist", msglist);
			if (session.getAttribute("message") != null) {
				request.removeAttribute("message");
			}
			OrderService orderService = new OrderService();
			int back = orderService.getOrderCount();
			request.setAttribute("count", back);
			return mapping.findForward("list");
		}
	}

	public void addmessage(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws IOException {
		HttpSession session = request.getSession();
		MessageForm messageForm = (MessageForm) form;
		Message message = new Message();
		MessageService messageService = new MessageService();
		if (session.getAttribute("user") != null) {
			User user = (User) session.getAttribute("user");
			message.setUserid(user.getUserid());
		} else {
			try {
				String ip = InetAddress.getLocalHost().getHostAddress();
				message.setUserid(ip);
			} catch (UnknownHostException e) {
				e.printStackTrace();
			}
		}
		message.setId(UUID.getUUID());
		message.setSpotid(messageForm.getSpotid());
		Date date = new Date();
		Timestamp ts = new Timestamp(date.getTime());
		message.setDate(ts);
		message.setContent(messageForm.getContent());
		int back = messageService.addMessage(message);
		PrintWriter out = response.getWriter();
		if (back == 1) {
			out.print(back);
			out.flush();
			out.close();
		} else {
			out.print(0);
			out.flush();
			out.close();
		}
	}

	public ActionForward delmessagebyid(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		HttpSession session = request.getSession();
		if (session.getAttribute("admin") == null) {
			return mapping.findForward("wrong");
		} else {
			MessageForm messageForm = (MessageForm) form;
			MessageService messageService = new MessageService();
			boolean back = messageService.delMessageById(messageForm.getId());
			if (back = true) {
				request.setAttribute("message", "删除成功");
			}
			List<Message> msglist = messageService.getMessage();
			request.setAttribute("msglist", msglist);
			return mapping.findForward("list");
		}

	}
}