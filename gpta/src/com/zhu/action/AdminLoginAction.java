/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.zhu.action;

import java.io.IOException;
import java.io.PrintWriter;
import java.sql.Timestamp;
import java.util.Date;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.zhu.entity.Admin;
import com.zhu.form.AdminLoginForm;
import com.zhu.service.AdminService;
import com.zhu.service.OrderService;
import com.zhu.util.MD5;

/**
 * MyEclipse Struts Creation date: 04-11-2015
 * 
 * XDoclet definition:
 * 
 * @struts.action parameter="m" scope="request" validate="true"
 */
public class AdminLoginAction extends DispatchAction {
	/*
	 * Generated Methods
	 */

	/**
	 * Method execute
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws IOException
	 */
	public void validate(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws IOException {
		AdminLoginForm adminLoginForm = (AdminLoginForm) form;
		MD5 md5 = new MD5();
		Admin admin = new Admin();
		String userid = adminLoginForm.getUserid();
		String password = md5.GetMD5Code(adminLoginForm.getPassword());
		AdminService adminService = new AdminService();
		long admincount = adminService.getUserId(userid);
		HttpSession session = request.getSession();

		int back = 100;
		PrintWriter out = response.getWriter();
		if (admincount > 0) {
			int lockflag = adminService.getLockFlag(userid);
			if (lockflag == 1) {
				// 用户锁定
				back = 102;
				out.print(back);
				out.flush();
				out.close();
			} else {
				admin = adminService.adminLogin(userid, password);
				int wrongtimes = adminService.getWrongTimes(userid);
				if (admin == null) {
					// 密码错误
					wrongtimes = wrongtimes + 1;
					// 连续错误3次,锁定账户
					if (wrongtimes == 3) {
						lockflag = 1;
						adminService.updLockFlag(lockflag, userid);
						back = wrongtimes;
						out.print(back);
						out.flush();
						out.close();
					} else {
						adminService.updWrongTimes(wrongtimes, userid);
						back = wrongtimes;
						out.print(back);
						out.flush();
						out.close();
					}
				} else {
					// 登录成功
					admin.setUserid(userid);
					admin.setWrongtimes(0);
					Date date = new Date();
					Timestamp ts = new Timestamp(date.getTime());
					admin.setLastlogindate(ts);
					adminService.updAdmin(admin);
					session.setAttribute("admin", admin);
					back = 100;
					out.print(back);
					out.flush();
					out.close();
				}
			}

		} else {
			// 用户不存在
			back = 101;
			out.print(back);
			out.flush();
			out.close();
		}

	}

	public ActionForward success(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws IOException {
		HttpSession session = request.getSession();
		if (session.getAttribute("admin") == null) {
			return mapping.findForward("wrong");
		} else {
			OrderService orderService = new OrderService();
			int back = orderService.getOrderCount();
			request.setAttribute("count", back);
			return mapping.findForward("success");
		}

	}
}